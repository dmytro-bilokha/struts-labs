package net.thinksquared.lilldep.database;
/**
  * Autogenerated by Lisptorq 0.1.4 
*/
import java.sql.*;
import java.util.Iterator;
public class BaseCollectionMap  { 
	public static final String CONTACT_ID  = "COLLECTION_MAP.CONTACT_ID"; 
	protected boolean saved  = false; 
	protected int contactId; 
	protected int collectionId; 
	protected Collection _collection  = null; 
	protected Contact _contact  = null; 
	public static final String COLLECTION_ID  = "COLLECTION_MAP.COLLECTION_ID"; 

	public void save()
	throws Exception{ 
		if(saved){
			BaseCollectionMapPeer.doUpdate(this);
		}else{
			BaseCollectionMapPeer.doInsert(this);
		}
	} 

	public int getCollectionId(){ 
		return collectionId;
	} 

	public void setContact(Contact args0){ 
		_contact=args0;
		contactId=args0.getContactId();
	} 

	public Collection getCollection(){ 

        if(_collection != null) return _collection;

        try{        

            Criteria crit = new Criteria();
            crit.add(Collection.COLLECTION_ID,collectionId);
            java.util.Iterator iter = BaseCollectionPeer.doSelect(crit);
            if(iter.hasNext()){
              _collection = (Collection) iter.next();
              return _collection;
            }
     
        }catch(Exception ignore){}
        
        return null;
	} 

	public void setCollectionId(int args0){ 
		_collection=null;
		collectionId=args0;
	} 

	public void setCollection(Collection args0){ 
		_collection=args0;
		collectionId=args0.getCollectionId();
	} 

	public void setContactId(int args0){ 
		_contact=null;
		contactId=args0;
	} 

	public Contact getContact(){ 

        if(_contact != null) return _contact;

        try{        

            Criteria crit = new Criteria();
            crit.add(Contact.CONTACT_ID,contactId);
            java.util.Iterator iter = BaseContactPeer.doSelect(crit);
            if(iter.hasNext()){
              _contact = (Contact) iter.next();
              return _contact;
            }
     
        }catch(Exception ignore){}
        
        return null;
	} 

	public int getContactId(){ 
		return contactId;
	} 
}